# Configuration file

##########################################################################################################
# client
#--------------------------------------------------------------------------------------------------------#
# Client only config options
##########################################################################################################

client {
    # Animation speed for gravity transition.
    # Animation takes 1 second divided by the config value.
    # Min value 1.0
    D:gravityTransition.animationSpeed=1.5
    D:transition.animationSpeed=1.5
}


##########################################################################################################
# general
#--------------------------------------------------------------------------------------------------------#
# Common config options
##########################################################################################################

general {
    # Number of normal gravity enablers (armor + baubles if installed) that must be worn for a
    # 	player to be affected by normal strength gravity
    #  [range: 0 ~ 2147483647, default: 4]
    I:gravity.normal.enablersRequired=4

    # Weak gravity enablers count as this many normal gravity enablers.
    # This makes more sense thematically to be greater than 1, but '1' or '0' will still work
    #  [range: -2147483648 ~ 2147483647, default: 4]
    I:gravity.normal.numEnablersWeakEnablersCountAs=4

    # Number of weak gravity enablers (armor + baubles if installed) that must be worn for a
    # 	player to be affected by weak gravity
    #  [range: 0 ~ 2147483647, default: 1]
    I:gravity.weak.enablersRequired=1

    # When a player's gravity direction changes to the opposite direction,
    # 	their accrued fall distance will be multiplied by this value.
    # 
    # Fall damage is performed server side, so it won't matter much if the client's values don't match.
    #  [range: 0.0 ~ 1.0, default: 0.0]
    S:gravityTransition.fallDistanceMultiplier.opposite=0.0

    # When a player's gravity direction changes to a direction other than the opposite direction,
    # 	their accrued fall distance will be multiplied by this value.
    # 
    # Fall damage is performed server side, so it won't matter much if the client's values don't match.
    #  [range: 0.0 ~ 1.0, default: 0.5]
    S:gravityTransition.fallDistanceMultiplier.other=0.5

    # The amount of anti-mass items that drop from each anti-mass spawn
    # This is also the base amount dropped by Anti-Mass ore.
    # The exact amount dropped is a random value between amountDropped and 2*amountDropped [range: 1 ~ 64, default: 5]
    I:item.anti-mass.amountDropped=5
    S:item.anti-mass.blocksToDropFrom <
        ore:oreRedstone
        ore:oreDiamond
        ore:oreLapis
        ore:oreCoal
        ore:oreQuartz
        ore:oreEmerald
        ore:oreCertusQuartz
        ore:oreChimerite
        ore:oreBlueTopaz
        ore:oreMoonstone
        ore:oreSunstone
        betteragriculture:slate_ore
        biomesoplenty:biome_block
        biomesoplenty:gem_ore
        draconicevolution:draconium_ore
        ore:oreDark
        bigreactors:brOre:1
        bigreactors:brOre:2
        ore:oreApatite
        mysticalagriculture:prosperity_ore
        mysticalagriculture:nether_prosperity_ore
        mysticalagriculture:end_prosperity_ore
        mysticalagriculture:inferium_ore
        mysticalagriculture:nether_inferium_ore
        mysticalagriculture:end_inferium_ore
        rftools:dimensional_shard_ore
        rockcandy:candy_ore
        ore:blockNetherCarbonOre
        ore:oreLavaCrystal
     >

    # The chance that anti-mass will spawn
    #  [range: 0.0 ~ 1.0, default: 0.05]
    S:item.anti-mass.dropChance=0.05

    # If true, only the first valid drop of a block will have a chance to spawn anti-mass
    # If false, each valid drop will have a chance to spawn anti-mass
    #  [default: false]
    B:item.anti-mass.dropChanceOncePerBlock=false
    S:item.anti-mass.dropsSpawnAs <
        ore:dustRedstone
        ore:gemDiamond
        ore:gemEmerald
        ore:gemQuartz
        ore:gemLapis
        minecraft:coal:0
        ore:crystalCertusQuartz
        appliedenergistics2:material:1
        ore:gemChimerite
        ore:gemBlueTopaz
        ore:gemMoonstone
        ore:gemSunstone
        betteragriculture:slate_item
        biomesoplenty:biome_essence
        biomesoplenty:gem
        ore:dustDraconium
        ore:gemDark
        evilcraft:darkGemCrushed
        bigreactors:minerals:0
        bigreactors:minerals:1
        ore:gemApatite
        mysticalagriculture:prosperity_shard
        mysticalagriculture:inferium_essence
        rftools:dimensional_shard
        rockcandy:raw_rock_candy
        ore:rawCarbon
        ore:gemLavaCrystal
     >

    # Destabilised Anti-Mass should dissipate/be destroyed when dropped out of an inventory [default: true]
    B:item.destabilisedAnti-Mass.destroyedWhenDropped=true

    # Range of the Graviton Pearl's push and pull effect. Min: 0.0, max: 20.0
    D:item.gravitonPearl.range=7.5

    # Set the strength of the Graviton Pearl's push and pull effect.
    # 	Pulled items and pushed projectiles are affected more than other entities
    #  [range: 0.0 ~ 1.0, default: 0.05]
    S:item.gravitonPearl.strength=0.05

    # Gravity anchors are added to stronghold, dungeon and mineshaft chests, this setting controls
    # 	the chance that one of those chests will contain an anchor [range: 0.0 ~ 1.0, default: 0.05]
    S:loot.gravityanchor.chance=0.05

    # List of dimension IDs that UpAndDown's ore generation should either generate in, or not generate in.
    # Depending on whether the list is set to act as a Whitelist or Blacklist. See "oreGen.dimensionListIsBlackList"
    I:oreGen.dimensionList <
     >

    # Set to true if the dimension ID list should be treated as a Blacklist.
    # Set to false if the dimension ID list should be treated as a Whitelist. [default: true]
    B:oreGen.dimensionListIsBlackList=true

    # Set to true to enable retroactive generation of ores.
    # This will generate ore in existing chunks that were generated before this mod was added. [default: true]
    B:oreGen.retroGenEnabled=true
}


